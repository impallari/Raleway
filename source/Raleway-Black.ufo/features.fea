# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem cyrl dflt;
languagesystem latn CAT;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn CRT;
languagesystem latn AZE;
languagesystem cyrl SRB;
languagesystem cyrl BGR;


feature aalt {
# automatic
feature ccmp;
feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature c2sc;
feature smcp;
feature salt;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
feature ss05;
feature ss06;
feature ss07;
feature ss08;
feature ss09;
feature ss10;
feature ss11;
feature lnum;

} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
} ccmp_Other_1;

lookup ccmp_latn_1 {
	script latn;
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
} ccmp_latn_1;

} ccmp;

feature locl {
# automatic
script latn;
language CAT;
sub l periodcentered' l by periodcentered.loclCAT;
sub L periodcentered' L by periodcentered.loclCAT;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language CRT;
sub i by idotaccent;
language AZE;
sub i by idotaccent;

script cyrl;
language SRB;
sub be-cy by be-cy.loclSRB;
language CHU;
sub Zedescender-cy by Zedescender-cy.loclCHU;
sub Esdescender-cy by Esdescender-cy.loclCHU;
sub zedescender-cy by zedescender-cy.loclCHU;
sub esdescender-cy by esdescender-cy.loclCHU;
language BSH;
sub Ghestroke-cy by Ghestroke-cy.loclBSH;
sub Zedescender-cy by Zedescender-cy.loclBSH;
sub Esdescender-cy by Esdescender-cy.loclBSH;
sub ghestroke-cy by ghestroke-cy.loclBSH;
sub esdescender-cy by esdescender-cy.loclBSH;
language BGR;
sub De-cy by De-cy.loclBGR;
sub El-cy by El-cy.loclBGR;
sub Ef-cy by Ef-cy.loclBGR;
sub ve-cy by ve-cy.loclBGR;
sub ge-cy by ge-cy.loclBGR;
sub de-cy by de-cy.loclBGR;
sub zhe-cy by zhe-cy.loclBGR;
sub ze-cy by ze-cy.loclBGR;
sub ii-cy by ii-cy.loclBGR;
sub iishort-cy by iishort-cy.loclBGR;
sub iigrave-cy by iigrave-cy.loclBGR;
sub ka-cy by ka-cy.loclBGR;
sub el-cy by el-cy.loclBGR;
sub pe-cy by pe-cy.loclBGR;
sub te-cy by te-cy.loclBGR;
sub tse-cy by tse-cy.loclBGR;
sub sha-cy by sha-cy.loclBGR;
sub shcha-cy by shcha-cy.loclBGR;
sub softsign-cy by softsign-cy.loclBGR;
sub hardsign-cy by hardsign-cy.loclBGR;

} locl;

feature subs {
# automatic
sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;

} subs;

feature sinf {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;

} sinf;

feature sups {
# automatic
sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;

} sups;

feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;

} numr;

feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;

} dnom;

feature frac {
# automatic
lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;

} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;

} ordn;

feature c2sc {
# automatic
sub A by a.sc;
sub B by b.sc;
sub C by c.sc;
sub D by d.sc;
sub E by e.sc;
sub F by f.sc;
sub G by g.sc;
sub H by h.sc;
sub I by i.sc;
sub J by j.sc;
sub K by k.sc;
sub L by l.sc;
sub M by m.sc;
sub N by n.sc;
sub O by o.sc;
sub P by p.sc;
sub Q by q.sc;
sub R by r.sc;
sub S by s.sc;
sub T by t.sc;
sub U by u.sc;
sub V by v.sc;
sub W by w.sc;
sub X by x.sc;
sub Y by y.sc;
sub Z by z.sc;

} c2sc;

feature smcp {
# automatic
sub a by a.sc;
sub b by b.sc;
sub c by c.sc;
sub d by d.sc;
sub e by e.sc;
sub f by f.sc;
sub g by g.sc;
sub h by h.sc;
sub i by i.sc;
sub j by j.sc;
sub k by k.sc;
sub l by l.sc;
sub m by m.sc;
sub n by n.sc;
sub o by o.sc;
sub p by p.sc;
sub q by q.sc;
sub r by r.sc;
sub s by s.sc;
sub t by t.sc;
sub u by u.sc;
sub v by v.sc;
sub w by w.sc;
sub x by x.sc;
sub y by y.sc;
sub z by z.sc;

} smcp;

feature dlig {
sub c t by c_t;
sub s t by s_t;

} dlig;

feature liga {
# automatic
sub f f l by f_f_l;
sub f f i by f_f_i;
sub f i by fi;
sub f f by f_f;
sub f l by fl;

} liga;

feature salt {
# automatic
sub a by a.ss01;

} salt;

feature ss01 {
# automatic
sub a by a.ss01;

} ss01;

feature ss02 {
# automatic
sub a by a.ss02;

} ss02;

feature ss03 {
# automatic
sub d by d.ss03;

} ss03;

feature ss04 {
# automatic
sub j by j.ss04;

} ss04;

feature ss05 {
# automatic
sub l by l.ss05;

} ss05;

feature ss06 {
# automatic
sub q by q.ss06;

} ss06;

feature ss07 {
# automatic
sub t by t.ss07;

} ss07;

feature ss08 {
# automatic
sub u by u.ss08;

} ss08;

feature ss09 {
# automatic
sub W by W.ss09;
sub w by w.ss09;

} ss09;

feature ss10 {
# automatic
sub y by y.ss10;

} ss10;

feature ss11 {
# automatic
sub G by G.ss11;

} ss11;

feature lnum {
sub [ one ] by [ one.lf ];
sub [ two ] by [ two.lf ];
sub [ three ] by [ three.lf ];
sub [ four ] by [ four.lf ];
sub [ five ] by [ five.lf ];
sub [ six ] by [ six.lf ];
sub [ seven ] by [ seven.lf ];
sub [ eight ] by [ eight.lf ];
sub [ nine ] by [ nine.lf ];
sub [ zero ] by [ zero.lf ];
} lnum;
